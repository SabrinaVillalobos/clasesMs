"use strict";
var strongSoap = require('../module/strongSoapB9');

const clientParams = {
    host: "172.17.200.7",
    path: '/test'
}
const nombreMicroservicio = 'test';
const req = {
    headers: {
        nombreaplicacion: "test",
        funcionalidad: "test",
        'user-agent':'test',
        etapa: "etapa1",
        fechaaplicacion: '11/11/17'
    },
    connection: {
        remoteAddress: "172.0.0.1"
    }
};
const estadoRespuesta = {
    codigo: "0000",
    estado: "OK",
    mensajeError: "TEST OK",
    sesionId: "123456789ABCDF"
};
const newAux = {};
newAux.codigo = estadoRespuesta.codigo;
newAux.estado = estadoRespuesta.estado;
newAux.mensaje = estadoRespuesta.mensajeError;
newAux.sesionId = estadoRespuesta.sesionId;

//Variables b치sicas para la llamada de las operaciones
var url = 'http://167.28.65.55:6106/services/QryCustomerCardInformation/v1.1?WSDL';
var requestArgs = {
    "LE-NUM-BENEF": "8540337",
    "LE-DIG-BENEF": "0"
};
//Definici칩n de Header de request
var header = {
    serviceId: "massiveSelectCustomerCardAccess",
    type: "Request",
    institutionType: "BECH",
    channelId: "HB",
    terminalId: "443",
    timeStamp: "20160819102144421",
    userAgent: "browser=IE6.0;platform=WINXP;subChannel=3154;",
    address: "167.28.140.55",
    sessionId: "999",
    userId: "0036050314",
    operatorId: "123744160"
}

//Definici칩n de nombre de funci칩n a llamar
//Service - portType/port - Operation
var funcionWSDL = ['QryCustomerCardInformation','QryCustomerCardInformation','massiveSelectCustomerCardAccess'];

var msg = {
    canal: header.channelId,
    funcionalidad: req.headers.funcionalidad,
    etapa: req.headers.etapa,
    ip: req.connection.remoteAddress,
    dispositivo: new Buffer(req.headers['user-agent']).toString('base64'),
    rutClient: "",
    rutEmpresa: "",
    nombreAplicacion: req.headers.nombreaplicacion,
    codigoSesion: "",
    idSesionVeritran: "",
    fechaAplicacion: req.headers.fechaaplicacion,
    fechaRespuesta: "",
    nombreMicroservicio: nombreMicroservicio,
    url: clientParams.host + clientParams.path,
    estadoRespuesta: new Buffer(JSON.stringify(newAux)).toString('base64'),
    nombreServicio: header.serviceId

};

setTimeout(() => strongSoap(url, header, requestArgs, funcionWSDL, function(respuesta, consulta){console.log(respuesta);console.log(consulta);console.log(msg);}),5000);
strongSoap(url, header, requestArgs, funcionWSDL, function(respuesta, consulta){console.log(respuesta);console.log(consulta);console.log(msg);});
